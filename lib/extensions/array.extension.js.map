{"version":3,"file":"array.extension.js","sourceRoot":"","sources":["../../src/common/extensions/array.extension.ts"],"names":[],"mappings":";AAMA,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG;IAC9B,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;AAC1C,CAAC,CAAC;AACF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG;IACzB,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC;AACF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAa,IAAyB;IAC7D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC;AACF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAAa,IAAiD,EAAE,aAAqB,CAAC;IAC1G,IAAI,IAAI;QAAE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;;QAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;AACvD,CAAC,CAAC","sourcesContent":["interface Array<T> {\n  Distinct<T>(): T[];\n  isNullOrEmpty(): boolean;\n  Sum<T>(func?: (arg: T, arg2: T, index: number) => number, startValue?: number): number;\n  Remove<T>(elem: (arg: T) => Boolean): void;\n}\nArray.prototype.isNullOrEmpty = function () {\n  return this == null || this.length == 0;\n};\nArray.prototype.Distinct = function <T>(): T[] {\n  return [...new Set(this)];\n};\nArray.prototype.Remove = function <T>(elem: (arg: T) => Boolean): void {\n  this.splice(this.findIndex(elem), 1);\n};\nArray.prototype.Sum = function <T>(func?: (arg: T, arg2: T, index: number) => number, startValue: number = 0): number {\n  if (func) return this.reduce(func, startValue);\n  else return this.reduce((a, b) => a + b, startValue);\n};\n"]}